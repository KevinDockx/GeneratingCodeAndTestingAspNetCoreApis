/* 
 * Library API
 *
 * Through this API you can access authors and their books.
 *
 * OpenAPI spec version: 1.0
 * Contact: kevin.dockx@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AuthorsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthorsApiTests
    {
        private AuthorsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthorsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthorsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthorsApi
            //Assert.IsInstanceOfType(typeof(AuthorsApi), instance, "instance is a AuthorsApi");
        }

        /// <summary>
        /// Test GetAuthor
        /// </summary>
        [Test]
        public void GetAuthorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //var response = instance.GetAuthor(authorId);
            //Assert.IsInstanceOf<Author> (response, "response is Author");
        }
        /// <summary>
        /// Test GetAuthors
        /// </summary>
        [Test]
        public void GetAuthorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAuthors();
            //Assert.IsInstanceOf<List<Author>> (response, "response is List<Author>");
        }
        /// <summary>
        /// Test UpdateAuthor
        /// </summary>
        [Test]
        public void UpdateAuthorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //AuthorForUpdate body = null;
            //var response = instance.UpdateAuthor(authorId, body);
            //Assert.IsInstanceOf<Author> (response, "response is Author");
        }
        /// <summary>
        /// Test UpdateAuthor_0
        /// </summary>
        [Test]
        public void UpdateAuthor_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //List<Operation> body = null;
            //var response = instance.UpdateAuthor_0(authorId, body);
            //Assert.IsInstanceOf<Author> (response, "response is Author");
        }
    }

}
