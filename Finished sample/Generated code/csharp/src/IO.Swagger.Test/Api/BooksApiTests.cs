/* 
 * Library API
 *
 * Through this API you can access authors and their books.
 *
 * OpenAPI spec version: 1.0
 * Contact: kevin.dockx@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BooksApiTests
    {
        private BooksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BooksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BooksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BooksApi
            //Assert.IsInstanceOfType(typeof(BooksApi), instance, "instance is a BooksApi");
        }

        /// <summary>
        /// Test CreateBook
        /// </summary>
        [Test]
        public void CreateBookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //BookForCreation body = null;
            //var response = instance.CreateBook(authorId, body);
            //Assert.IsInstanceOf<Book> (response, "response is Book");
        }
        /// <summary>
        /// Test GetBook
        /// </summary>
        [Test]
        public void GetBookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //Guid? bookId = null;
            //var response = instance.GetBook(authorId, bookId);
            //Assert.IsInstanceOf<Book> (response, "response is Book");
        }
        /// <summary>
        /// Test GetBooks
        /// </summary>
        [Test]
        public void GetBooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? authorId = null;
            //var response = instance.GetBooks(authorId);
            //Assert.IsInstanceOf<List<Book>> (response, "response is List<Book>");
        }
    }

}
